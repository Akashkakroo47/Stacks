/*Max Area of Histogram*/


#include<bits/stdc++.h>
using namespace std;
vector<int> leftIdx(vector<int> &left,int arr[],int n)
{
	stack<pair<int,int> > s;
	int pseudoIdx=-1;
	for(int i=0;i<n;i++)
	{
		if(s.size()==0) left.push_back(pseudoIdx);
	    else if(s.size()>0 && s.top().first<arr[i]) left.push_back(s.top().second);
	    else if(s.size()>0 && s.top().first>=arr[i])
	    {
	    	while(s.size()>0 && s.top().first>=arr[i])
	    	{
	    		s.pop();
			}
			if(s.size()==0) left.push_back(pseudoIdx);
			else left.push_back(s.top().second);
		}
		s.push({arr[i],i});
	}
	return left;
}
vector<int> rightIdx(vector<int> &right,int arr[],int n)
{
	stack<pair<int,int> > s;
	int pseudoIdx=7;
	for(int i=n-1;i>=0;i--)
	{
		if(s.size()==0) right.push_back(pseudoIdx);
	    else if(s.size()>0 && s.top().first<arr[i]) right.push_back(s.top().second);
	    else if(s.size()>0 && s.top().first>=arr[i])
	    {
	    	while(s.size()>0 && s.top().first>=arr[i])
	    	{
	    		s.pop();
			}
			if(s.size()==0) right.push_back(pseudoIdx);
			else right.push_back(s.top().second);
		}
		s.push({arr[i],i});
	}
	reverse(right.begin(),right.end());
	return right;
}
int maxArea(int arr[],int n)
{
	vector<int> left;
	vector<int> right;
	vector<int> width;
	vector<int> area;
	leftIdx(left,arr,n);
	rightIdx(right,arr,n);
	for(int i=0;i<left.size();i++)
    {
    	width.push_back(right[i]-left[i]-1);
	}
	for(int i=0;i<n;i++)
	{
		area.push_back(arr[i]*width[i]);
	}
	int max_area=*max_element(area.begin(),area.end());
	return max_area;
}
int main()
{
	int n;
	cin>>n;
	int arr[n];
	for(int i=0;i<n;i++)
	{
		cin>>arr[i];
	}
	cout<<maxArea(arr,n);
}
